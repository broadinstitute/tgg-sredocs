"use strict";(self.webpackChunktgg_sredocs=self.webpackChunktgg_sredocs||[]).push([[911],{2693:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>m,frontMatter:()=>t,metadata:()=>d,toc:()=>a});var i=s(4848),o=s(8453);const t={sidebar_position:2,title:"gnomAD"},r="gnomAD Project Application Deployment",d={id:"applications/gnomad",title:"gnomAD",description:"gnomAD Browser",source:"@site/docs/applications/gnomad.md",sourceDirName:"applications",slug:"/applications/gnomad",permalink:"/docs/applications/gnomad",draft:!1,unlisted:!1,editUrl:"https://github.com/broadinstitute/tgg-sredocs/tree/main/docs/applications/gnomad.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"gnomAD"},sidebar:"docsSidebar",previous:{title:"Tools",permalink:"/docs/applications/tools"}},l={},a=[{value:"gnomAD Browser",id:"gnomad-browser",level:2},{value:"System Requirements",id:"system-requirements",level:3},{value:"Development / Demos",id:"development--demos",level:3},{value:"Production",id:"production",level:3},{value:"Exome Results Browsers",id:"exome-results-browsers",level:2},{value:"System Requirements",id:"system-requirements-1",level:3},{value:"Development / Demos",id:"development--demos-1",level:3},{value:"Production",id:"production-1",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"gnomad-project-application-deployment",children:"gnomAD Project Application Deployment"}),"\n",(0,i.jsx)(n.h2,{id:"gnomad-browser",children:"gnomAD Browser"}),"\n",(0,i.jsx)(n.h3,{id:"system-requirements",children:"System Requirements"}),"\n",(0,i.jsx)(n.p,{children:"The gnomAD browser contains several components. The requirements for each are listed independently below."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Elasticsearch: 4 data nodes, each with","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"vCPU: 8"}),"\n",(0,i.jsx)(n.li,{children:"RAM: 64GiB"}),"\n",(0,i.jsxs)(n.li,{children:["Disk: 1.7TB SSD (",(0,i.jsx)(n.a,{href:"https://cloud.google.com/compute/docs/disks#disk-types",children:"GCP Documentation"}),")","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Total cluster storage: 6.8TB"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Redis:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"vCPU: 1"}),"\n",(0,i.jsx)(n.li,{children:"RAM: 48GiB"}),"\n",(0,i.jsxs)(n.li,{children:["DiskP 100GB SSD (",(0,i.jsx)(n.a,{href:"https://cloud.google.com/compute/docs/disks#disk-types",children:"GCP Documentation"}),")"]}),"\n",(0,i.jsx)(n.li,{children:"Note: This is the fewest number of CPUs google will provide with this amount of RAM"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["API:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"vCPU: 2"}),"\n",(0,i.jsx)(n.li,{children:"RAM: 12GiB"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Browser (frontend HTTP):","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"vCPU: 0.5"}),"\n",(0,i.jsx)(n.li,{children:"RAM: 512GiB"}),"\n",(0,i.jsx)(n.li,{children:"Disk: 20GiB SSD (for nginx HTTP cache)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"development--demos",children:"Development / Demos"}),"\n",(0,i.jsx)(n.h3,{id:"production",children:"Production"}),"\n",(0,i.jsx)(n.h2,{id:"exome-results-browsers",children:"Exome Results Browsers"}),"\n",(0,i.jsxs)(n.p,{children:["The exome results browsers are deployed on GKE, with manifests an environments managed by ",(0,i.jsx)(n.a,{href:"https://kustomize.io",children:"Kustomize"}),". Configurations can be found in the [gnomad-deployments](",(0,i.jsx)(n.a,{href:"https://github.com/broadinstitute/gnomad-deployments",children:"https://github.com/broadinstitute/gnomad-deployments"})," repository)."]}),"\n",(0,i.jsx)(n.h3,{id:"system-requirements-1",children:"System Requirements"}),"\n",(0,i.jsx)(n.p,{children:"Note, CPU and RAM are upper bounds. In practice, we've found that the app uses less on average."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"CPU: 0.5vCPU"}),"\n",(0,i.jsx)(n.li,{children:"RAM: 512MiB"}),"\n",(0,i.jsxs)(n.li,{children:["Disk: 100GB Standard Persistent Disk (",(0,i.jsx)(n.a,{href:"https://cloud.google.com/compute/docs/disks#disk-types",children:"GCP Documentation"}),")"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"development--demos-1",children:"Development / Demos"}),"\n",(0,i.jsx)(n.p,{children:"To create a new demo environment, simply make a copy of the 'demo' kustomization, and edit it to meet your needs. That demo deployment example includes a few extras, which you may find useful to adapt:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"an Ingress, to expose your demo on a public IP address"}),"\n",(0,i.jsx)(n.li,{children:"A patch to change the name of a new persistent data disk (you may need this if you are testing updated or new datasets."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"$ cp -r demo my-demo\n# make edits as needed\n$ vim my-demo/kustomization.yaml\n$ vim my-demo/ingress.yaml\n\n# view your manifests\n$ cd my-demo\n$ kustomize build .\n# deploy to a kubernetes cluster\n$ kustomize build . | kubectl apply -f -\n# or, in the case of an already existing deployment,\n# diff your local changes with the active deploy:\n$ kustomize build . | kubectl diff -f -\n"})}),"\n",(0,i.jsx)(n.h3,{id:"production-1",children:"Production"}),"\n",(0,i.jsxs)(n.p,{children:["The production deployment of the exome results browsers can be found in the ",(0,i.jsx)(n.a,{href:"https://github.com/broadinstitute/gnomad-deployments",children:"gnomad-deployments"})," repository, under ",(0,i.jsx)(n.code,{children:"exome-results-browsers/prod"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"In the most common case of a simple image update, the deployment manifest is updated automatically:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"After merging a pull request, a docker image is built via Google Cloud Build."}),"\n",(0,i.jsx)(n.li,{children:"A new image with the exome-results-browser's git commit (short) SHA is built and pushed."}),"\n",(0,i.jsx)(n.li,{children:"After a successful image build, the prod deployment kustomization is updated with the new tag in the gnomad-deployments repository."}),"\n",(0,i.jsxs)(n.li,{children:["When you're ready to deploy, navigate to ",(0,i.jsx)(n.a,{href:"https://argocd.sre.the-tgg.dev/applications/tgg-services/exome-results-prod",children:"the exome-results-prod app"}),' in Argo, and click "Sync".']}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>d});var i=s(6540);const o={},t=i.createContext(o);function r(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);