"use strict";(self.webpackChunktgg_sredocs=self.webpackChunktgg_sredocs||[]).push([[849],{6164:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docsSidebar":[{"type":"link","label":"Introduction","href":"/docs/intro","docId":"intro","unlisted":false},{"type":"category","label":"Patterns","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Infrastructure Layering","href":"/docs/patterns/layering","docId":"patterns/layering","unlisted":false},{"type":"link","label":"Configuration and Code","href":"/docs/patterns/configuration_and_code","docId":"patterns/configuration_and_code","unlisted":false},{"type":"link","label":"Managed Services","href":"/docs/patterns/managed_services","docId":"patterns/managed_services","unlisted":false},{"type":"link","label":"Cloud project organization","href":"/docs/patterns/organization","docId":"patterns/organization","unlisted":false},{"type":"link","label":"Terraform Modules","href":"/docs/patterns/terraform_modules","docId":"patterns/terraform_modules","unlisted":false}],"href":"/docs/category/patterns"},{"type":"category","label":"Infrastructure","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Deployment Workflow","href":"/docs/infrastructure/stack","docId":"infrastructure/stack","unlisted":false},{"type":"link","label":"Development","href":"/docs/infrastructure/development","docId":"infrastructure/development","unlisted":false}],"href":"/docs/category/infrastructure"},{"type":"category","label":"App Deployment","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Tools","href":"/docs/app_deployment/tools","docId":"app_deployment/tools","unlisted":false},{"type":"link","label":"gnomAD","href":"/docs/app_deployment/gnomad","docId":"app_deployment/gnomad","unlisted":false}],"href":"/docs/category/app-deployment"}]},"docs":{"app_deployment/gnomad":{"id":"app_deployment/gnomad","title":"gnomAD","description":"gnomAD Browser","sidebar":"docsSidebar"},"app_deployment/tools":{"id":"app_deployment/tools","title":"Tools","description":"Kubernetes-based","sidebar":"docsSidebar"},"infrastructure/development":{"id":"infrastructure/development","title":"Development","description":"gnomAD","sidebar":"docsSidebar"},"infrastructure/stack":{"id":"infrastructure/stack","title":"Deployment Workflow","description":"Our typical production infrastructure deployments utilize terraform on google cloud platform. This involves:","sidebar":"docsSidebar"},"intro":{"id":"intro","title":"Introduction","description":"","sidebar":"docsSidebar"},"patterns/configuration_and_code":{"id":"patterns/configuration_and_code","title":"Configuration and Code","description":"In general, we should prefer to store our environment configurations and application deployment definitions separately from our application source code. The following is a discussion of some of the (anti-)patterns that you might consider, and their pros and cons. It is important to note that these are not one size fits all solutions, and that you may select a different methodology if it suits your application.","sidebar":"docsSidebar"},"patterns/layering":{"id":"patterns/layering","title":"Infrastructure Layering","description":"In general, we\'ve found the following practice of managing infrastructure in layers to work quite well. Many of our initial approaches to infrastructure management involved placing the entire configuration in a single layer, so that the network, data, and application were all deployed together. While it was convenient to have a single entrypoint for the entire application deployment (such as a single terraform apply), this approach exhibited a number of drawbacks, including:","sidebar":"docsSidebar"},"patterns/managed_services":{"id":"patterns/managed_services","title":"Managed Services","description":"use managed services whenever possible, prefer services that use standard formats as inputs, like docker images, and open source components like database engines to avoid lock-in.","sidebar":"docsSidebar"},"patterns/organization":{"id":"patterns/organization","title":"Cloud project organization","description":"Separation of environments","sidebar":"docsSidebar"},"patterns/terraform_modules":{"id":"patterns/terraform_modules","title":"Terraform Modules","description":"Basic Philosophy","sidebar":"docsSidebar"}}}}')}}]);