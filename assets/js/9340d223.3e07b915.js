"use strict";(self.webpackChunktgg_sredocs=self.webpackChunktgg_sredocs||[]).push([[538],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),u=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return o.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(n),d=r,g=c["".concat(s,".").concat(d)]||c[d]||m[d]||a;return n?o.createElement(g,i(i({ref:t},p),{},{components:n})):o.createElement(g,i({ref:t},p))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:r,i[1]=l;for(var u=2;u<a;u++)i[u]=n[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9750:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var o=n(7462),r=(n(7294),n(3905));const a={sidebar_position:2},i="Development",l={unversionedId:"infrastructure/development",id:"infrastructure/development",title:"Development",description:"gnomAD",source:"@site/docs/infrastructure/development.md",sourceDirName:"infrastructure",slug:"/infrastructure/development",permalink:"/docs/infrastructure/development",draft:!1,editUrl:"https://github.com/broadinstitute/tgg-sredocs/tree/main/docs/infrastructure/development.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"Stack",permalink:"/docs/infrastructure/stack"}},s={},u=[{value:"gnomAD",id:"gnomad",level:2},{value:"Full Prod Replica",id:"full-prod-replica",level:3},{value:"Simple private GKE cluster",id:"simple-private-gke-cluster",level:3},{value:"Creating resources",id:"creating-resources",level:3},{value:"Connecting to your cluster",id:"connecting-to-your-cluster",level:3},{value:"Cleaning up",id:"cleaning-up",level:3}],p={toc:u},c="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"development"},"Development"),(0,r.kt)("h2",{id:"gnomad"},"gnomAD"),(0,r.kt)("p",null,"In cases where you'd like to configure a prod-like GKE cluster for testing gnomAD browser installations, you can utilize one of two modules:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"the ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/broadinstitute/tgg-terraform-modules/tree/main/gnomad-browser-infra"},"gnomad-browser-infra")," module"),(0,r.kt)("li",{parentName:"ul"},"the ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/broadinstitute/tgg-terraform-modules/tree/main/private-gke-cluster"},"private-gke-cluster")," module")),(0,r.kt)("p",null,"depending on your needs. If you just need a simple GKE cluster, you can start with the private-gke-cluster module, which will give you a single GKE cluster without much else surrounding it. If you need the surrounding tooling, such as serviceAccounts for running data pipelines, accessing / restoring from elasticsearch snapshots, you can use the gnomad-browser-infra module. In either case, you need to provide a VPC network to deploy the resources into, which you can use the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/broadinstitute/tgg-terraform-modules/tree/main/gnomad-vpc"},"gnomad-vpc")," module. If you already have a VPC to use, the GKE cluster modules simply need the name of your VPC network, and the name of the subnet that servers should be deployed into."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"While ",(0,r.kt)("inlineCode",{parentName:"p"},"deployctl")," is still the method for deploying our application manifests, you should pick a ",(0,r.kt)("inlineCode",{parentName:"p"},"infra_prefix")," (see examples below) with a name formatted like ",(0,r.kt)("inlineCode",{parentName:"p"},"gnomad-abc")," where ",(0,r.kt)("inlineCode",{parentName:"p"},"abc")," is a name descriptive of you or your test. Then in your ",(0,r.kt)("inlineCode",{parentName:"p"},"deploy_config.json")," file, you can specify an ",(0,r.kt)("inlineCode",{parentName:"p"},"environment_tag")," of ",(0,r.kt)("inlineCode",{parentName:"p"},"abc"),". Doing so will maintain compatility with ",(0,r.kt)("inlineCode",{parentName:"p"},"deployctl"),"'s expectations for cluster naming.")),(0,r.kt)("p",null,"The following are some examples of different configurations that are suitable for development"),(0,r.kt)("h3",{id:"full-prod-replica"},"Full Prod Replica"),(0,r.kt)("p",null,"This example configures a VPC and a cluster with the same amount of resources as the production environment. Note that we've selected preemptiple nodes here to reduce cost. You should adjust the ",(0,r.kt)("inlineCode",{parentName:"p"},"gke_node_pools")," variable to meet the needs of your current test."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'provider "google" {\n    project = "gnomadev"\n    region  = "us-east1"\n}\n\nmodule "gnomad-mytest" {\n  source              = "github.com/broadinstitute/tgg-terraform-modules//gnomad-vpc?ref=gnomad-vpc-v0.0.1"\n  network_name_prefix = "gnomad-mytest\n}\n\nmodule "gnomad-test-infra" {\n  source                                = "github.com/broadinstitute/tgg-terraform-modules//gnomad-browser-infra?ref=gnomad-browser-infra-v0.0.3"\n  infra_prefix                          = "gnomad-mytest"\n  vpc_network_name                      = module.gnomad-mytest.gnomad_vpc_network_name\n  vpc_subnet_name                       = "gnomad-mytest-gke"\n  project_id                            = "gnomadev"\n  gke_control_plane_authorized_networks = ["0.0.0.0/0"]\n  gke_pods_range_slice                  = "10.164.0.0/14"\n  gke_services_range_slice              = "10.168.0.0/20"\n  gke_node_pools                        = [\n    {\n      "pool_machine_type": "e2-standard-4",\n      "pool_name": "main-pool",\n      "pool_num_nodes": 2,\n      "pool_preemptible": true,\n      "pool_resource_labels": {},\n      "pool_zone": ""\n    },\n    {\n      "pool_machine_type": "e2-custom-6-49152",\n      "pool_name": "redis",\n      "pool_num_nodes": 1,\n      "pool_preemptible": true,\n      "pool_resource_labels": {\n        "component": "redis"\n      },\n      "pool_zone": ""\n    },\n    {\n      "pool_machine_type": "e2-highmem-8",\n      "pool_name": "es-data",\n      "pool_num_nodes": 3,\n      "pool_preemptible": true,\n      "pool_resource_labels": {\n        "component": "elasticsearch"\n      },\n      "pool_zone": ""\n    }\n  ]\n}\n')),(0,r.kt)("h3",{id:"simple-private-gke-cluster"},"Simple private GKE cluster"),(0,r.kt)("p",null,"If all you need is a GKE cluster, you could use the following example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'provider "google" {\n    project = "gnomadev"\n    region  = "us-east1"\n}\n\nmodule "gnomad-mytest" {\n  source              = "github.com/broadinstitute/tgg-terraform-modules//gnomad-vpc?ref=gnomad-vpc-v0.0.1"\n  network_name_prefix = "gnomad-mytest\n}\n\nmodule "my-test-cluster" {\n  source                                = "github.com/broadinstitute/tgg-terraform-modules//private-gke-cluster?ref=private-gke-cluster-v1.0.2"\n  gke_cluster_name                      = "testing-cidr-ranges"\n  project_name                          = "gnomadev"\n  gke_control_plane_zone                = "us-east1"\n  vpc_network_name                      = module.gnomad-mytest.gnomad_vpc_network_name\n  vpc_subnet_name                       = "gnomad-mytest-gke"\n  gke_control_plane_authorized_networks = ["0.0.0.0/0"]\n  gke_services_range_slice              = "10.220.0.0/20"\n  gke_pods_range_slice                  = "10.216.0.0/14"\n  gke_node_pools                        = [\n    {\n      "pool_machine_type": "e2-medium",\n      "pool_name": "main-pool",\n      "pool_num_nodes": 2,\n      "pool_preemptible": true,\n      "pool_resource_labels": {},\n      "pool_zone": ""\n    }\n  ]\n}\n')),(0,r.kt)("p",null,'This configures a single 2-member node pool called "main-pool". You should adjust the ',(0,r.kt)("inlineCode",{parentName:"p"},"gke_node_pools")," variable to suit your development needs."),(0,r.kt)("h3",{id:"creating-resources"},"Creating resources"),(0,r.kt)("p",null,"To create your resources, create a new folder, and create a file called ",(0,r.kt)("inlineCode",{parentName:"p"},"main.tf")," inside it. That file should contain one of the above examples, and/or any customizations that you need to make for your dev env."),(0,r.kt)("p",null,"Once you have a ",(0,r.kt)("inlineCode",{parentName:"p"},"main.tf"),", you can provision your test environment with these terraform commands:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"terraform init\nterraform plan\nterraform apply\n")),(0,r.kt)("h3",{id:"connecting-to-your-cluster"},"Connecting to your cluster"),(0,r.kt)("p",null,"Once your cluster is provisioned, be sure to retrieve credentials from it and set your current ",(0,r.kt)("inlineCode",{parentName:"p"},"kubectl")," context:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"gcloud container clusters get-credentials gnomad-mytest --project gnomadev --region us-east1\n")),(0,r.kt)("h3",{id:"cleaning-up"},"Cleaning up"),(0,r.kt)("p",null,"When you no longer need your test infrastructure, switch to the directory containing your ",(0,r.kt)("inlineCode",{parentName:"p"},"main.tf")," file, and use the terraform CLI as follows."),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"This will delete everything that was created as a result of using the terraform modules. If you have any data stored in your test cluster or in the GCS buckets that are provisioned with ",(0,r.kt)("inlineCode",{parentName:"p"},"gnomad-browser-infra"),", be sure to copy that data to a safe place.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"terraform destroy\n")))}m.isMDXComponent=!0}}]);