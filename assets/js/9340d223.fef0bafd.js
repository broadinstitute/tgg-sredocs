"use strict";(self.webpackChunktgg_sredocs=self.webpackChunktgg_sredocs||[]).push([[156],{8352:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var t=o(4848),r=o(8453);const s={sidebar_position:2},i="Development",a={id:"infrastructure/development",title:"Development",description:"gnomAD",source:"@site/docs/infrastructure/development.md",sourceDirName:"infrastructure",slug:"/infrastructure/development",permalink:"/docs/infrastructure/development",draft:!1,unlisted:!1,editUrl:"https://github.com/broadinstitute/tgg-sredocs/tree/main/docs/infrastructure/development.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"Deployment Workflow",permalink:"/docs/infrastructure/stack"},next:{title:"App Deployment",permalink:"/docs/category/app-deployment"}},l={},c=[{value:"gnomAD",id:"gnomad",level:2},{value:"Best Practices",id:"best-practices",level:3},{value:"Example Deveplopment Configurations",id:"example-deveplopment-configurations",level:3},{value:"Full Prod Replica",id:"full-prod-replica",level:4},{value:"Simple private GKE cluster",id:"simple-private-gke-cluster",level:4},{value:"Creating resources",id:"creating-resources",level:3},{value:"Connecting to your cluster",id:"connecting-to-your-cluster",level:3},{value:"Cleaning up",id:"cleaning-up",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"development",children:"Development"}),"\n",(0,t.jsx)(n.h2,{id:"gnomad",children:"gnomAD"}),"\n",(0,t.jsx)(n.p,{children:"In cases where you'd like to configure a prod-like GKE cluster for testing gnomAD browser installations, you can utilize one of two modules:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["the ",(0,t.jsx)(n.a,{href:"https://github.com/broadinstitute/tgg-terraform-modules/tree/main/gnomad-browser-infra",children:"gnomad-browser-infra"})," module"]}),"\n",(0,t.jsxs)(n.li,{children:["the ",(0,t.jsx)(n.a,{href:"https://github.com/broadinstitute/tgg-terraform-modules/tree/main/private-gke-cluster",children:"private-gke-cluster"})," module"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["depending on your needs. If you just need a simple GKE cluster, you can start with the private-gke-cluster module, which will give you a single GKE cluster without much else surrounding it. If you need the surrounding tooling, such as serviceAccounts for running data pipelines, accessing / restoring from elasticsearch snapshots, you can use the gnomad-browser-infra module. In either case, you need to provide a VPC network to deploy the resources into, which you can use the ",(0,t.jsx)(n.a,{href:"https://github.com/broadinstitute/tgg-terraform-modules/tree/main/gnomad-vpc",children:"gnomad-vpc"})," module. If you already have a VPC to use, the GKE cluster modules simply need the name of your VPC network, and the name of the subnet that servers should be deployed into."]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["While ",(0,t.jsx)(n.code,{children:"deployctl"})," is still the method for deploying our application manifests, you should pick a ",(0,t.jsx)(n.code,{children:"infra_prefix"})," (see examples below) with a name formatted like ",(0,t.jsx)(n.code,{children:"gnomad-abc"})," where ",(0,t.jsx)(n.code,{children:"abc"})," is a name descriptive of you or your test. Then in your ",(0,t.jsx)(n.code,{children:"deploy_config.json"})," file, you can specify an ",(0,t.jsx)(n.code,{children:"environment_tag"})," of ",(0,t.jsx)(n.code,{children:"abc"}),". Doing so will maintain compatility with ",(0,t.jsx)(n.code,{children:"deployctl"}),"'s expectations for cluster naming."]})}),"\n",(0,t.jsx)(n.h3,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Preemptible Node Pools"})}),"\n",(0,t.jsx)(n.p,{children:"For development environments, preemptible or spot VMs might be a good choice, since they are dramatically cheaper. The example configurations below show how to set your node pools as preemptible or spot."}),"\n",(0,t.jsx)(n.h3,{id:"example-deveplopment-configurations",children:"Example Deveplopment Configurations"}),"\n",(0,t.jsx)(n.p,{children:"The following are some examples of different configurations that are suitable for development."}),"\n",(0,t.jsx)(n.h4,{id:"full-prod-replica",children:"Full Prod Replica"}),"\n",(0,t.jsxs)(n.p,{children:["This example configures a VPC and a cluster with the same amount of resources as the production environment. Note that we've selected preemptiple nodes here to reduce cost. You should adjust the ",(0,t.jsx)(n.code,{children:"gke_node_pools"})," variable to meet the needs of your current test."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'\nprovider "google" {\n  project = "gnomadev"\n  region  = "us-east1"\n}\n\ndata "google_client_config" "tf_sa" {}\n\nprovider "kubernetes" {\n  host  = "https://${module.gnomad-browser-infra.gke_cluster_api_endpoint}"\n  token = data.google_client_config.tf_sa.access_token\n  cluster_ca_certificate = base64decode(\n    module.gnomad-browser-infra.gke_cluster_ca_cert,\n  )\n}\n\nmodule "gnomad-vpc-mytest" {\n  source              = "github.com/broadinstitute/tgg-terraform-modules//gnomad-vpc?ref=gnomad-vpc-v0.0.2"\n  network_name_prefix = "gnomad-mytest"\n}\n\nmodule "gnomad-browser-infra" {\n  depends_on                            = [module.gnomad-vpc-mytest]\n  source                                = "github.com/broadinstitute/tgg-terraform-modules//gnomad-browser-infra?ref=gnomad-browser-infra-v1.3.0"\n  infra_prefix                          = "gnomad-mytest"\n  vpc_network_name                      = module.gnomad-vpc-mytest.gnomad_vpc_network_name\n  vpc_subnet_name                       = "${module.gnomad-vpc-mytest.gnomad_vpc_network_name}-gke"\n  project_id                            = "gnomadev"\n  gke_control_plane_authorized_networks = ["0.0.0.0/0"]\n  gke_pods_range_slice                  = "10.164.0.0/14"\n  gke_services_range_slice              = "10.168.0.0/20"\n  gke_control_plane_zone                = "us-east1-b"\n  es_snapshots_bucket_location          = "us-east1"\n  data_pipeline_bucket_location         = "us-east1"\n  gke_node_pools = [\n    {\n      "pool_name"            = "main-pool"\n      "pool_num_nodes"       = 2\n      "pool_machine_type"    = "e2-standard-4"\n      "pool_spot"     = true\n    },\n    {\n      "pool_name"         = "redis"\n      "pool_num_nodes"    = 1\n      "pool_machine_type" = "e2-custom-6-49152"\n      "pool_spot"  = true\n      "pool_resource_labels" = {\n        "component" = "redis"\n      }\n    },\n    {\n      "pool_name"         = "es-data"\n      "pool_num_nodes"    = 3\n      "pool_machine_type" = "e2-highmem-8"\n      "pool_spot"  = true\n      "pool_resource_labels" = {\n        "component" = "elasticsearch"\n      }\n    }\n  ]\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"simple-private-gke-cluster",children:"Simple private GKE cluster"}),"\n",(0,t.jsx)(n.p,{children:"If all you need is a GKE cluster, you could use the following example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'provider "google" {\n    project = "gnomadev"\n    region  = "us-east1"\n}\n\nmodule "gnomad-vpc-mytest" {\n  source              = "github.com/broadinstitute/tgg-terraform-modules//gnomad-vpc?ref=gnomad-vpc-v0.0.2"\n  network_name_prefix = "gnomad-mytest"\n}\n\nmodule "my-test-cluster" {\n  depends_on                            = [module.gnomad-vpc-mytest]\n  source                                = "github.com/broadinstitute/tgg-terraform-modules//private-gke-cluster?ref=private-gke-cluster-v1.1.0"\n  gke_cluster_name                      = "testing-cidr-ranges"\n  project_name                          = "gnomadev"\n  gke_control_plane_zone                = "us-east1"\n  vpc_network_name                      = module.gnomad-vpc-mytest.gnomad_vpc_network_name\n  vpc_subnet_name                       = "${module.gnomad-vpc-mytest.gnomad_vpc_network_name}-gke"\n  gke_control_plane_authorized_networks = ["0.0.0.0/0"]\n  gke_services_range_slice              = "10.220.0.0/20"\n  gke_pods_range_slice                  = "10.216.0.0/14"\n  node_pools                            = [\n    {\n      "pool_machine_type": "e2-medium",\n      "pool_name": "main-pool",\n      "pool_num_nodes": 2,\n      "pool_spot": true,\n    }\n  ]\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:['This configures a single 2-member node pool called "main-pool". You should adjust the ',(0,t.jsx)(n.code,{children:"gke_node_pools"})," variable to suit your development needs."]}),"\n",(0,t.jsx)(n.h3,{id:"creating-resources",children:"Creating resources"}),"\n",(0,t.jsxs)(n.p,{children:["To create your resources, create a new folder, and create a file called ",(0,t.jsx)(n.code,{children:"main.tf"})," inside it. That file should contain one of the above examples, and/or any customizations that you need to make for your dev env."]}),"\n",(0,t.jsxs)(n.p,{children:["Once you have a ",(0,t.jsx)(n.code,{children:"main.tf"}),", you can provision your test environment with these terraform commands:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"terraform init\nterraform plan\nterraform apply\n"})}),"\n",(0,t.jsx)(n.h3,{id:"connecting-to-your-cluster",children:"Connecting to your cluster"}),"\n",(0,t.jsxs)(n.p,{children:["Once your cluster is provisioned, be sure to retrieve credentials from it and set your current ",(0,t.jsx)(n.code,{children:"kubectl"})," context:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"gcloud container clusters get-credentials gnomad-mytest --project gnomadev --region us-east1\n"})}),"\n",(0,t.jsx)(n.h3,{id:"cleaning-up",children:"Cleaning up"}),"\n",(0,t.jsxs)(n.p,{children:["When you no longer need your test infrastructure, switch to the directory containing your ",(0,t.jsx)(n.code,{children:"main.tf"})," file, and use the terraform CLI as follows."]}),"\n",(0,t.jsx)(n.admonition,{type:"caution",children:(0,t.jsxs)(n.p,{children:["This will delete everything that was created as a result of using the terraform modules. If you have any data stored in your test cluster or in the GCS buckets that are provisioned with ",(0,t.jsx)(n.code,{children:"gnomad-browser-infra"}),", be sure to copy that data to a safe place."]})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"terraform destroy\n"})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>a});var t=o(6540);const r={},s=t.createContext(r);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);